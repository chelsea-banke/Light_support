-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.answer
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    answer character varying(255) COLLATE pg_catalog."default" NOT NULL,
    send_date timestamp without time zone NOT NULL DEFAULT CURRENT_DATE,
    id_message character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_chat_session character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT answer_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.asset
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    longitude numeric(38, 2) NOT NULL,
    latitude numeric(38, 2) NOT NULL,
    address character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT asset_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.chat_session
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_date timestamp without time zone NOT NULL DEFAULT CURRENT_DATE,
    updated_date timestamp without time zone NOT NULL DEFAULT CURRENT_DATE,
    id_user character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_fault character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT chat_session_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.fault
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default" NOT NULL,
    status character varying(255) COLLATE pg_catalog."default" NOT NULL,
    longitude numeric(38, 2),
    latitude numeric(38, 2),
    address character varying(255) COLLATE pg_catalog."default",
    created_date timestamp without time zone NOT NULL DEFAULT CURRENT_DATE,
    update_date timestamp without time zone NOT NULL DEFAULT CURRENT_DATE,
    id_user character varying(255) COLLATE pg_catalog."default",
    type smallint,
    CONSTRAINT fault_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.geocordinate
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    lattitude bigint NOT NULL,
    longitude bigint NOT NULL,
    address character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT geocordinate_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.message
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    message character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_date timestamp(6) without time zone DEFAULT CURRENT_DATE,
    updated_date timestamp(6) without time zone DEFAULT CURRENT_DATE,
    id_chat_session character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT message_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.refresh_token
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    token character varying(200) COLLATE pg_catalog."default" NOT NULL,
    expires_at timestamp without time zone NOT NULL,
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_DATE,
    CONSTRAINT refresh_token_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.request
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    quantity character varying(255) COLLATE pg_catalog."default" NOT NULL,
    request_date timestamp without time zone NOT NULL,
    handed_date timestamp without time zone NOT NULL,
    return_date timestamp without time zone NOT NULL,
    status character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_ticket character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_tool character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT request_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ticket
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    priority character varying(255) COLLATE pg_catalog."default" NOT NULL,
    status character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_user character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_fault character varying(255) COLLATE pg_catalog."default" NOT NULL,
    longitude numeric(38, 2),
    latitude numeric(38, 2),
    address character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT ticket_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tool
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    status character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tool_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."user"
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    contact character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role character varying(255) COLLATE pg_catalog."default" NOT NULL,
    longitude numeric(38, 2),
    latitude numeric(38, 2),
    address character varying(255) COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_DATE,
    updated_at timestamp without time zone NOT NULL DEFAULT CURRENT_DATE,
    CONSTRAINT user_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.answer
    ADD CONSTRAINT id_chat_session FOREIGN KEY (id_chat_session)
    REFERENCES public.chat_session (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.answer
    ADD CONSTRAINT id_message FOREIGN KEY (id_message)
    REFERENCES public.message (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.chat_session
    ADD CONSTRAINT id_fault FOREIGN KEY (id_fault)
    REFERENCES public.fault (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.chat_session
    ADD CONSTRAINT id_user FOREIGN KEY (id_user)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.fault
    ADD CONSTRAINT id_user FOREIGN KEY (id_user)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.message
    ADD CONSTRAINT id_chat_session FOREIGN KEY (id_chat_session)
    REFERENCES public.chat_session (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.refresh_token
    ADD CONSTRAINT id_user FOREIGN KEY (id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS refresh_token_pkey
    ON public.refresh_token(id);


ALTER TABLE IF EXISTS public.request
    ADD CONSTRAINT id_ticket FOREIGN KEY (id_ticket)
    REFERENCES public.ticket (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.request
    ADD CONSTRAINT id_tool FOREIGN KEY (id_tool)
    REFERENCES public.tool (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.ticket
    ADD CONSTRAINT id_fault FOREIGN KEY (id_fault)
    REFERENCES public.fault (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.ticket
    ADD CONSTRAINT id_user FOREIGN KEY (id_user)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;